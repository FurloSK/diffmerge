## Webhelp.Unix.Makefile -- a makefile to generate the webhelp content
## from the .xml manual source.
##
## I copied this from docbook-xsl-1.78.1/webhelp/Makefile.sample
## and tweaked it slightly.
##
## Run this on MAC or LINUX.  
##
## It will create: ./GENERATED/webhelp.tgz
##
## If you edit the contents of sgdm3-docbook.xml, be sure to test
## the .PDF and .CHM views (on a Windows machine) since I've had
## occasions where one translator did thing differently than another.
## YMMV.
##
##################################################################


MY_OS:=$(shell uname)
ifeq ($(MY_OS),Linux)
# Fedora or Ubuntu has normal tar program.
else ifeq ($(MY_OS),Darwin)
# Apple has funky tar program that creates ._ files
else
$(error Unknown OS. uname reported $(MY_OS))
endif

# Configuration
# The name of the source DocBook xml file
INPUT_XML = sgdm3-docbook.xml

# The makefile assumes that you have a 
# directory named images that contains 
# your images. It copies this to the 
# output directory
USER_IMAGES_PARENT_DIR = .

# Name of the desired output directory
# This will be created if it doesn't exist
OUTPUT_DIR = ./GENERATED/webhelp

# A list of files to exclude from indexing
INDEXER_EXCLUDED_FILES = 

# Profiling params. For more information on 
# profiling (conditional text) and DocBook documents, see
# http://www.sagehill.net/docbookxsl/Profiling.html
PROFILE.ARCH = ""
PROFILE.AUDIENCE = ""
PROFILE.CONDITION = ""
PROFILE.CONFORMANCE = ""
PROFILE.LANG = ""
PROFILE.OS = ""
PROFILE.REVISION = ""
PROFILE.REVISIONFLAG = ""
PROFILE.ROLE = ""
PROFILE.SECURITY = ""
PROFILE.STATUS = ""
PROFILE.USERLEVEL = ""
PROFILE.VENDOR = ""
PROFILE.WORDSIZE = ""
PROFILE.ATTRIBUTE = ""
PROFILE.VALUE = ""

# Use this variable to pass in other stringparams
# to the xsltproc pass that generates DocBook output.
# For example:
# OTHER_XSLTPROC_ARGS = --stringparam example.param ""
OTHER_XSLTPROC_ARGS = --stringparam webhelp.base.dir $(OUTPUT_DIR)

# Path to the DocBook Distribution that 
# contains the xslts etc.
DOCBOOK_DIST := ./docbook-xsl-1.78.1
WEBHELP_DIST := ./docbook-xsl-1.78.1/webhelp

# =================================================
# You probably don't need to change anything below
# unless you choose to add a validation step.
# ================================================
DOCBOOK_EXTENSIONS_DIR = $(DOCBOOK_DIST)/extensions
INDEXER_JAR   := $(DOCBOOK_EXTENSIONS_DIR)/webhelpindexer.jar
TAGSOUP_JAR   := $(DOCBOOK_EXTENSIONS_DIR)/tagsoup-1.2.1.jar
LUCENE_ANALYZER_JAR   := $(DOCBOOK_EXTENSIONS_DIR)/lucene-analyzers-3.0.0.jar
LUCENE_CORE_JAR   := $(DOCBOOK_EXTENSIONS_DIR)/lucene-core-3.0.0.jar

classpath := $(INDEXER_JAR):$(TAGSOUP_JAR):$(LUCENE_ANALYZER_JAR):$(LUCENE_CORE_JAR)

all: webhelp

webhelp: $(INPUT_XML) copyfiles chunk index tarball

copyfiles:
	@-rm -rf $(OUTPUT_DIR)
	@echo Copying boilerplate files to target...
	@mkdir -p $(OUTPUT_DIR)
	@cp -r $(WEBHELP_DIST)/template/common ${OUTPUT_DIR}
	@test ! -d $(USER_IMAGES_PARENT_DIR)/images/ || cp -r $(USER_IMAGES_PARENT_DIR)/images ${OUTPUT_DIR}/images
	@####cp $(WEBHELP_DIST)/template/favicon.ico ${OUTPUT_DIR}/
	@cp ../../src/Installers/Windows/msi/DiffMergeIcon_32x32_32.ico ${OUTPUT_DIR}/favicon.ico
	@cp ../../src/Installers/Linux.debian.DiffMergeIcon48.png ${OUTPUT_DIR}/common/images/logo.png

chunk:
	@# This is like an ifdef. I don't currently have any 
	@# in the .xml, but it might come in handy now that
	@# more than 1 online form.
	@echo Pre-processing source...
	@xsltproc  --xinclude --output GENERATED/xincluded-profiled.xml  \
                  --stringparam  profile.arch ${PROFILE.ARCH} \
                  --stringparam  profile.audience ${PROFILE.AUDIENCE} \
                  --stringparam  profile.condition ${PROFILE.CONDITION} \
                  --stringparam  profile.conformance ${PROFILE.CONFORMANCE} \
                  --stringparam  profile.lang ${PROFILE.LANG} \
                  --stringparam  profile.os ${PROFILE.OS} \
                  --stringparam  profile.revision ${PROFILE.REVISION} \
                  --stringparam  profile.revisionflag ${PROFILE.REVISIONFLAG} \
                  --stringparam  profile.role ${PROFILE.ROLE} \
                  --stringparam  profile.security ${PROFILE.SECURITY} \
                  --stringparam  profile.status ${PROFILE.STATUS} \
                  --stringparam  profile.userlevel ${PROFILE.USERLEVEL} \
                  --stringparam  profile.vendor ${PROFILE.VENDOR} \
                  --stringparam  profile.wordsize ${PROFILE.WORDSIZE} \
                  --stringparam  profile.attribute ${PROFILE.ATTRIBUTE} \
                  --stringparam  profile.value ${PROFILE.VALUE} \
                  ${DOCBOOK_DIST}/profiling/profile.xsl  \
                  ${INPUT_XML}

	@echo Generating HTML from source...
	@echo A few namespace-related warnings are to be expected.
	@xsltproc ${OTHER_XSLTPROC_ARGS} \
		 ${WEBHELP_DIST}/xsl/webhelp.xsl \
		 GENERATED/xincluded-profiled.xml
	@xsltproc --output GENERATED/sgdm3.fo ${DOCBOOK_DIST}/fo/docbook.xsl GENERATED/xincluded-profiled.xml
	@./fop-2.10/fop/fop GENERATED/sgdm3.fo -pdf ./GENERATED/sgdm3.pdf
	@rm GENERATED/sgdm3.fo
	@cp ./GENERATED/sgdm3.pdf ../../src/Installers/DiffMergeManual.pdf

index:
	@echo Building search indexes...
	@java \
                -DhtmlDir=$(OUTPUT_DIR) \
                -DindexerLanguage=en \
                -DhtmlExtension=html \
                -DdoStem=true \
                -DindexerExcludedFiles=$(INDEXER_EXCLUDED_FILES) \
                -Dorg.xml.sax.driver=org.ccil.cowan.tagsoup.Parser \
                -Djavax.xml.parsers.SAXParserFactory=org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl \
                -classpath $(classpath) \
                com.nexwave.nquindexer.IndexerMain

	@echo Copying search JS to target...
	@[ -d $(OUTPUT_DIR)/search ] || mkdir ${OUTPUT_DIR}/search
	@[ -d $(OUTPUT_DIR)/search/stemmers ] || mkdir ${OUTPUT_DIR}/search/stemmers
	@cp ${WEBHELP_DIST}/template/search/default.props ${OUTPUT_DIR}/search/
	@cp ${WEBHELP_DIST}/template/search/en-us.props ${OUTPUT_DIR}/search/
	@cp ${WEBHELP_DIST}/template/search/nwSearchFnt.js ${OUTPUT_DIR}/search/
	@cp ${WEBHELP_DIST}/template/search/punctuation.props ${OUTPUT_DIR}/search/
	@cp ${WEBHELP_DIST}/template/search/stemmers/en_stemmer.js ${OUTPUT_DIR}/search/stemmers/

tarball:
	@echo Building tarball...
	@rm -f GENERATED/webhelp.tgz
ifeq ($(MY_OS),Darwin)
	@(cd GENERATED; COPYFILE_DISABLE=1 tar -czf webhelp.tgz webhelp)
else
	@(cd GENERATED; tar -czf webhelp.tgz webhelp)
endif
	@echo Created GENERATED/webhelp.tgz

clean:
	$(RM) -r ${OUTPUT_DIR}

